<uc:SharpBIMUserControl x:Class="SharpBIM.GitTracker.Core.WPF.Mvvm.Views.IssueView"
                        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                        xmlns:Behaviors1f2cd76a="clr-namespace:SharpBIM.GitTracker.Core.WPF.Mvvm.Views.Behaviors"
                        xmlns:Modelse2b90750="clr-namespace:SharpBIM.GitTracker.Core.WPF.Mvvm.Models"
                        xmlns:av="http://icsharpcode.net/sharpdevelop/avalonedit"
                        xmlns:cmp="clr-namespace:SharpBIM.GitTracker.Core.WPF.Mvvm.Views.Components"
                        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
                        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
                        xmlns:md="https://github.com/whistyun/MdXaml"
                        xmlns:mv="clr-namespace:SharpBIM.GitTracker.Core.WPF.Mvvm.ViewModels"
                        xmlns:uc="clr-namespace:SharpBIM.WPF.Controls.UserControls;assembly=SharpBIM"
                        xmlns:ui="clr-namespace:SharpBIM.WPF.Controls;assembly=SharpBIM"
                        Margin="8"
                        HorizontalAlignment="Left"
                        d:DataContext="{d:DesignInstance Type={x:Type mv:IssueViewModel}}"
                        d:DesignHeight="450"
                        d:DesignWidth="800"
                        mc:Ignorable="d">
    <Grid>
        <Grid.Resources>
            <ResourceDictionary Source="/SharpBIM.GitTracker.Core;component/WPF/Mvvm/Views/DataTemplates.xaml" />
        </Grid.Resources>

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        <Grid VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="auto" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>
            <StackPanel Orientation="Horizontal">
                <ui:UIButton Width="auto"
                             Height="auto"
                             HorizontalAlignment="Left"
                             Command="{Binding PushIssueCommand}"
                             Content="Update"
                             DockPanel.Dock="Top"
                             GlyphSize="26"
                             ShowText="False" />
            </StackPanel>
        </Grid>
        <Grid Grid.Row="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto" />
                <RowDefinition Height="auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="10" />
                <RowDefinition Height="2*" />
            </Grid.RowDefinitions>
            <ui:TaggedTextBox Width="auto"
                              Height="auto"
                              Margin="0,0,0,8"
                              HorizontalAlignment="Stretch"
                              Background="Transparent"
                              BorderThickness="0,0,0,1"
                              FontSize="18"
                              FontWeight="Bold"
                              Foreground="{DynamicResource ControlFontBrush}"
                              PlaceHolder="Your Issue title goes here..."
                              Text="{Binding Title}" />
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>

                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="auto" />
                </Grid.ColumnDefinitions>

                <ItemsControl Grid.Column="0"
                              MaxHeight="200"
                              HorizontalAlignment="Left"
                              ItemTemplate="{StaticResource LabelDataTemplate}"
                              ItemsSource="{Binding IssueLables}">
                    <ItemsControl.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel />
                        </ItemsPanelTemplate>
                    </ItemsControl.ItemsPanel>
                </ItemsControl>
                <Grid Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*" />
                    </Grid.RowDefinitions>
                    <ui:TaggedTextBox x:Name="labelTxtBox"
                                      Grid.Column="2"
                                      Height="auto"
                                      MinWidth="200"
                                      Margin="5,0"
                                      HorizontalAlignment="Stretch"
                                      VerticalAlignment="Stretch"
                                      VerticalContentAlignment="Center"
                                      AcceptsTab="True"
                                      PlaceHolder="add label or type . to list all"
                                      PreviewKeyDown="labelTxtBox_PreviewKeyDown"
                                      ShowTagText="False"
                                      Text="{Binding TypedInLabelName,
                                                     UpdateSourceTrigger=PropertyChanged}">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="TextChanged">
                                <i:InvokeCommandAction Command="{Binding AddLabelTextChangedCommand}"
                                                       CommandParameter="{Binding Text,
                                                                                  ElementName=labelTxtBox}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </ui:TaggedTextBox>
                </Grid>
            </Grid>
            <cmp:MarkDownEditor x:Name="avtxt"
                                Grid.Row="2"
                                DataContext="{Binding}"
                                ImagePastedCommand="{Binding PastImageCommand}" />

            <GridSplitter Grid.Row="3"
                          Margin="5,3"
                          HorizontalAlignment="Stretch"
                          BorderBrush="Gray"
                          ResizeBehavior="PreviousAndNext"
                          ResizeDirection="Rows" />
            <cmp:MarkDownViewer x:Name="mk"
                                Grid.Row="4"
                                DataContext="{Binding}" />
        </Grid>
        <Popup x:Name="pop"
               Width="auto"
               MinWidth="200"
               MaxWidth="{Binding ActualWidth,
                                  RelativeSource={RelativeSource AncestorType={x:Type mv:IssueViewModel}}}"
               MaxHeight="500"
               AllowsTransparency="True"
               Closed="pop_Closed"
               IsOpen="{Binding ShowLabelsList}"
               Placement="Bottom"
               PlacementTarget="{Binding ElementName=labelTxtBox}"
               PopupAnimation="Fade"
               StaysOpen="False">
            <Grid>
                <Border Margin="0,10,10,10"
                        Background="Gray"
                        CornerRadius="10"
                        Opacity="0.3">
                    <Border.Effect>
                        <BlurEffect Radius="22" />
                    </Border.Effect>
                </Border>
                <Border Margin="0,0,10,10"
                        BorderBrush="{DynamicResource ControlForegroundBrush}"
                        BorderThickness=".4"
                        CornerRadius="8"
                        Visibility="Visible">
                    <!--  Shadow Layer  -->
                    <Grid Margin="5"
                          HorizontalAlignment="Stretch"
                          VerticalAlignment="Stretch"
                          Background="{DynamicResource ControlBackground}">

                        <ListBox x:Name="lst"
                                 Margin="5"
                                 HorizontalAlignment="Stretch"
                                 VerticalAlignment="Stretch"
                                 HorizontalContentAlignment="Stretch"
                                 VerticalContentAlignment="Stretch"
                                 ItemsSource="{Binding LabelCollectionView}"
                                 PreviewKeyDown="pop_PreviewKeyDown">

                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type Modelse2b90750:LabelModelView}">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <ContentControl Margin="0,5"
                                                        Content="{Binding}"
                                                        ContentTemplate="{StaticResource LabelDataTemplate}"
                                                        DataContext="{Binding}">

                                            <i:Interaction.Triggers>
                                                <i:EventTrigger EventName="PreviewMouseLeftButtonDown">
                                                    <i:InvokeCommandAction Command="{Binding AddRemoveCommand}"
                                                                           CommandParameter="{Binding}" />
                                                </i:EventTrigger>
                                            </i:Interaction.Triggers>
                                        </ContentControl>
                                        <TextBox Grid.Column="1"
                                                 Margin="10,0,0,0"
                                                 HorizontalAlignment="Stretch"
                                                 VerticalAlignment="Center"
                                                 BorderThickness="0,0,0,1"
                                                 Foreground="{DynamicResource ControlFontBrush}"
                                                 Text="{Binding Description,
                                                                UpdateSourceTrigger=PropertyChanged}"
                                                 TextWrapping="Wrap" />
                                        <i:Interaction.Triggers>
                                            <i:KeyTrigger Key="Return">
                                                <i:InvokeCommandAction Command="{Binding AddRemoveCommand}"
                                                                       CommandParameter="{Binding SelectedItem,
                                                                                                  RelativeSource={RelativeSource AncestorType={x:Type ListBox}}}" />
                                            </i:KeyTrigger>
                                        </i:Interaction.Triggers>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Border>
            </Grid>
        </Popup>
    </Grid>
</uc:SharpBIMUserControl>